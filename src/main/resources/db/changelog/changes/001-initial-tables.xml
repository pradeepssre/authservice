<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd">

    <changeSet id="001-initial-tables" author="developer" context="base">
        <!-- Users table -->
        <createTable tableName="users" schemaName="auth">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="email" type="varchar(255)">
                <constraints unique="true" nullable="false"/>
            </column>

            <column name="password_hash" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="first_name" type="varchar(100)"/>
            <column name="last_name" type="varchar(100)"/>

            <column name="account_locked" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="account_expired" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="credentials_expired" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="enabled" type="boolean" defaultValueBoolean="true">
                <constraints nullable="false"/>
            </column>
            <column name="failed_attempts" type="int" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
            <column name="lock_time" type="timestamp"/>
            <column name="created_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>

        </createTable>
        <!--User Logins Table-->
 <!-- User logins table -->
        <createTable tableName="user_logins" schemaName="auth">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="user_id" type="uuid">
                <constraints nullable="false" foreignKeyName="fk_login_user" references="auth.users(id)"/>
            </column>
            <column name="login_timestamp" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="ip_address" type="varchar(45)"/>
            <column name="user_agent" type="varchar(255)"/>
            <column name="success" type="boolean" defaultValueBoolean="true">
                <constraints nullable="false"/>
            </column>
            <column name="failure_reason" type="varchar(100)"/>
            <column name="location" type="varchar(100)"/>
        </createTable>

        <!-- Roles table -->
        <createTable tableName="roles" schemaName="auth">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="varchar(50)">
                <constraints unique="true" nullable="false"/>
            </column>
            <column name="description" type="varchar(255)"/>
            <column name="created_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <!-- Permissions table -->
        <createTable tableName="permissions" schemaName="auth">
            <column name="id" type="uuid">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="varchar(100)">
                <constraints unique="true" nullable="false"/>
            </column>
            <column name="description" type="varchar(255)"/>
            <column name="created_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <!-- User Roles junction table -->
        <createTable tableName="user_roles" schemaName="auth">
            <column name="user_id" type="uuid">
                <constraints nullable="false" foreignKeyName="fk_user_roles_user" references="auth.users(id)"/>
            </column>
            <column name="role_id" type="uuid">
                <constraints nullable="false" foreignKeyName="fk_user_roles_role" references="auth.roles(id)"/>
            </column>
        </createTable>
        <addPrimaryKey tableName="user_roles" columnNames="user_id, role_id" schemaName="auth"/>

        <!-- Role Permissions junction table -->
        <createTable tableName="role_permissions" schemaName="auth">
            <column name="role_id" type="uuid">
                <constraints nullable="false" foreignKeyName="fk_role_permissions_role" references="auth.roles(id)"/>
            </column>
            <column name="permission_id" type="uuid">
                <constraints nullable="false" foreignKeyName="fk_role_permissions_permission" references="auth.permissions(id)"/>
            </column>
        </createTable>
        <addPrimaryKey tableName="role_permissions" columnNames="role_id, permission_id" schemaName="auth"/>

        <!-- Updated timestamp triggers -->
        <sql>
            CREATE OR REPLACE FUNCTION auth.update_timestamp()
            RETURNS TRIGGER AS $$
            BEGIN
                NEW.updated_at = CURRENT_TIMESTAMP;
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;

            CREATE TRIGGER users_update_timestamp
            BEFORE UPDATE ON auth.users
            FOR EACH ROW
            EXECUTE FUNCTION auth.update_timestamp();

            CREATE TRIGGER roles_update_timestamp
            BEFORE UPDATE ON auth.roles
            FOR EACH ROW
            EXECUTE FUNCTION auth.update_timestamp();

            CREATE TRIGGER permissions_update_timestamp
            BEFORE UPDATE ON auth.permissions
            FOR EACH ROW
            EXECUTE FUNCTION auth.update_timestamp();
        </sql>

        <!-- Rollback -->
        <rollback>
            <dropTable tableName="user_roles" schemaName="auth"/>
            <dropTable tableName="role_permissions" schemaName="auth"/>
            <dropTable tableName="permissions" schemaName="auth"/>
            <dropTable tableName="roles" schemaName="auth"/>
            <dropTable tableName="users" schemaName="auth"/>
            <dropIndex indexName="user_logins" schemaName="auth"/>
            <sql>
                DROP FUNCTION IF EXISTS auth.update_timestamp();
            </sql>
        </rollback>
    </changeSet>
</databaseChangeLog>
